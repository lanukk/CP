<snippet>
	<content><![CDATA[
#include<bits/stdc++.h>
#include<math.h>
#include<set>
#include<string>
using namespace std;

#define line                  "\n"
#define all(x)                x.begin(),x.end()
#define kickstart_print(l)    cout<<"Case #"<<l<<": "
#define pb                    push_back

//max minn
template <typename T> T MIN(T first) { return first; } template <typename T, typename... Args> T MIN(T first, Args... args) { return min(first, MIN(args...)); }
template <typename T> T MAX(T first) { return first; } template <typename T, typename... Args> T MAX(T first, Args... args) { return max(first, MAX(args...)); }


vector<vector<int> > adj; int e1, e2; int N, M;


//#define int                long long int

int gcd(int a, int b);
int lcm(int a, int b);

void solve(int input)
{
	// read problem C if stuck on B for longer than 20 mins!!


}

signed main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int x = 1;
	//cin>>x;
	for (int i = 1; i <= x; i++)
		solve(i);
	return 0;
}

int gcd(int a, int b)
{
	if (b == 0)
		return a;
	return gcd(b, a % b);
}

int lcm(int a, int b)
{
	return (a / gcd(a, b)) * b;
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>zztemplate</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
